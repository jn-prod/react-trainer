{"version":3,"sources":["services/chrono.service.js","components/Chrono/Chrono.js","components/Tv/Tv.js","components/Playlist/Playlist.js","views/App/App.js","reportWebVitals.js","index.js"],"names":["ChronoService","n","sec","parseInt","hours","Math","floor","minutes","seconds","Chrono","props","state","timer","toggle","bind","reset","chronoService","this","pause","setState","e","window","clearInterval","setInterval","updateChrono","play","className","toHHMMSS","onClick","label","React","Component","Tv","displayPlaylist","url","id","split","replace","generateUrlFromYoutube","playlist","title","width","height","src","frameBorder","allow","allowFullScreen","Playlist","updatePlaylist","onFormChange","target","value","preventDefault","submitHandler","onSubmit","htmlFor","aria-label","name","type","onChange","App","onPlaylistSubmit","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a80afd75.chunk.js","sourcesContent":["class ChronoService {\n    toHHMMSS(n) {\n        const sec = parseInt(n, 10); // don't forget the second param\n        let hours = Math.floor(sec / 3600);\n        let minutes = Math.floor((sec - (hours * 3600)) / 60);\n        let seconds = sec - (hours * 3600) - (minutes * 60);\n    \n        if (hours < 10) hours = `0${hours}`;\n        if (minutes < 10) minutes = `0${minutes}`;\n        if (seconds < 10) seconds = `0${seconds}`;\n\n        return `${hours}:${minutes}:${seconds}`;\n    }\n}\n\nexport default ChronoService","import React from 'react'\nimport ChronoService from '../../services/chrono.service'\nimport './chrono.scss'\n\nclass Chrono extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = { n: 0, timer: null};\n        this.toggle = this.toggle.bind(this)\n        this.reset = this.reset.bind(this)\n        this.chronoService = new ChronoService()\n    }\n\n    componentWillUnmount() {\n        this.pause()\n    }\n\n    updateChrono() {\n        this.setState({n: this.state.n + 1})\n    }\n\n    reset(e) {\n        this.setState({n: 0})\n    }\n\n    play(e) {\n        if (this.state.timer !== null) return;\n\n        window.clearInterval(this.state.timer)\n        this.setState({timer: window.setInterval(this.updateChrono.bind(this), 1000)})\n    }\n\n    pause(e) {\n        window.clearInterval(this.state.timer)\n        this.setState({timer: null});\n    }\n\n    toggle() {\n        return this.state.timer ? this.pause() : this.play();\n    }\n\n    label() {\n        return this.state.timer ? 'pause' : 'play';\n    }\n\n    render() {\n        return <article className=\"Chrono\">\n            <span>{this.chronoService.toHHMMSS(this.state.n)}</span>\n            <button onClick={this.toggle} className=\"btn btn-light\">{this.label()}</button>\n            <button onClick={this.reset} className=\"btn btn-light\">Reset</button>\n        </article>\n    }\n}\n\nexport default Chrono","import React from 'react'\nimport './tv.scss'\n\nclass Tv extends React.Component {\n    constructor(props) {\n        super(props)\n        this.displayPlaylist = this.displayPlaylist.bind(this);\n    }\n\n    generateUrlFromYoutube(url = '') {\n        // 'https://www.youtube.com/watch?v=oYuybfkwGx4&list=PLjwdMgw5TTLWom67YfZuha-1iYzIirwJR&index=6'\n        const id = url.split('?')[1]?.split('&')[0]?.replace('v=', '')\n        return `https://www.youtube.com/embed/${id}`\n    }\n\n    displayPlaylist(){\n        return this.generateUrlFromYoutube(this.props.playlist)\n    }\n\n    render() {\n        return <article className=\"Tv\">\n            <iframe title=\"youtube\" width=\"100%\" height=\"100%\" src={this.displayPlaylist()} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n        </article>\n    }\n}\n\nexport default Tv","import React from 'react'\nimport './playlist.scss'\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playlist: ''\n        }\n        this.updatePlaylist = this.updatePlaylist.bind(this)\n        this.onFormChange = this.onFormChange.bind(this)\n    }\n\n    updatePlaylist(e) {\n        this.setState({playlist: e.target.value});\n    }\n\n    onFormChange(e) {\n        e.preventDefault();\n        this.props.submitHandler({playlist: this.state.playlist}, e);\n    }\n\n    render() {\n        return <form onSubmit={this.onFormChange} className=\"Playlist\">\n            <label htmlFor=\"playlist-input\" aria-label=\"Enter your playlist\" />\n            <input id=\"playlist-input\" name=\"playlist-input\" type=\"url\" className=\"form-control\" value={this.state.playlist} onChange={this.updatePlaylist}/>\n            <button type='submit' className=\"btn\">Lire</button>\n        </form>\n    }\n}\n\nexport default Playlist;","import React from 'react';\n\nimport './app.scss';\n\nimport Chrono from '../../components/Chrono/Chrono'\nimport Tv from '../../components/Tv/Tv'\nimport Playlist from '../../components/Playlist/Playlist'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist: ''\n    }\n    this.onPlaylistSubmit = this.onPlaylistSubmit.bind(this);\n  }\n  onPlaylistSubmit({playlist}, e) {\n    this.setState({ playlist })\n  }\n  render() {\n    return <main role=\"main\" className=\"App\">\n        <header className=\"d-flex\">\n          <Chrono />\n          <Playlist submitHandler={this.onPlaylistSubmit}/>\n        </header>\n        <Tv playlist={this.state.playlist}/>\n    </main>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}